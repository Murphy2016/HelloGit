<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc" 
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
        
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:config/jdbc.properties</value>
                <value>classpath*:config/jdbc2.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- 识别@Scheduled注解 -->
	<task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" pool-size="10"/>
    
    <bean id="dataSource" 
        class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc.url}</value>
        </property>
        <property name="username">
            <value>${jdbc.username}</value>
        </property>
        <property name="password">
            <value>${jdbc.password}</value>
        </property>
        
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
	   <property name="testWhileIdle" value="true" />
	   <property name="validationQuery" value="select 1 from dual" />
    </bean>
    
    <bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="configLocation" value="classpath:config/sqlmap-config.xml" />
    	<property name="dataSource" ref="dataSource" />
        
    </bean>
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<property name="dataSource" ref="dataSource" />
    </bean> 
    
    
    <bean id="dataSource2" 
        class="org.apache.commons.dbcp.BasicDataSource"
        destroy-method="close">
        <property name="driverClassName">
            <value>${jdbc2.driverClassName}</value>
        </property>
        <property name="url">
            <value>${jdbc2.url}</value>
        </property>
        <property name="username">
            <value>${jdbc2.username}</value>
        </property>
        <property name="password">
            <value>${jdbc2.password}</value>
        </property>
        
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />
	   <property name="testWhileIdle" value="true" />
	   <property name="validationQuery" value="select 1 from dual" />
    </bean>
    
    <bean id="sqlMapClient2" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
    	<property name="configLocation" value="classpath:config/sqlmap-config2.xml" />
    	<property name="dataSource" ref="dataSource2" />
        
    </bean>
    
    
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
    
    <context:component-scan base-package="com.qianmo" />
           
    <mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
		    <bean class="org.springframework.http.converter.StringHttpMessageConverter">
		      <property name="supportedMediaTypes" value = "text/plain;charset=UTF-8" />
		    </bean>
	   </mvc:message-converters>
	</mvc:annotation-driven>    
        
        
</beans>        